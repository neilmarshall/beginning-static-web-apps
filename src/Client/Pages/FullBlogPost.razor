@page "/blogposts/{author}/{id:guid}"
@using Models
@inject BlogPostService service
@inject NavigationManager navigationManager

@if (blogPost is null)
{
    <div>Loading...</div>
}
else
{
    <AuthorizeView>
        <Authorized>
            <a href="blogposts/@blogPost.Author/@blogPost.id/edit">Edit</a>
            <a href="javascript:;" @onclick="Delete">Delete</a>
        </Authorized>
    </AuthorizeView>
    <article>
        <h1>@blogPost.Title</h1>
        <h2>@blogPost.Author</h2>
        <div>@blogPost.PublishedDate</div>
        <div>
            @foreach (var tag in blogPost.Tags)
            {
                <em>@tag,</em>
            }
        </div>
        <div>
            @((MarkupString)Markdig.Markdown.ToHtml(blogPost.BlogpostMarkdown))
        </div>
    </article>
}

@code {
    private BlogPost? blogPost;

    [Parameter]
    public Guid Id { get; set; }

    [Parameter]
    public string Author { get; set; } = null!;

    protected override async Task OnInitializedAsync() =>
        blogPost = await service.GetBlogPost(Id, Author);

    private async void Delete()
    {
        if (blogPost is null || !blogPost.id.HasValue)
            throw new NotSupportedException("Cannot delete a blog post without an ID");

        await service.Delete(blogPost.id.Value, blogPost.Author);
        navigationManager.NavigateTo("blogposts");
    }
}
